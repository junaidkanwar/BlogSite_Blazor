@page "/dashboard/{username}"
@inject BlogService BlogService
@inject NavigationManager NavigationManager
@using BlogSite.Models
@inject BlogSite.Data.UserService UserService
@layout NoMenuLayout

@if (username == null)
{
    <div class="container text-center py-5 my-5">
        <h2>You're not logged in</h2>
        <p>Kindly Login to Gain Access</p>
        <button class="btn btn-outline-primary" @onclick="HandleLogin">Login</button>
    </div>
}
else
{

<div class="admin-dashboard">
    <div class="sidebar">
        <h2>Dashboard</h2>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link" href="#submit-blog" @onclick="GoToPost">Post a Blog</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#edit-blogs" @onclick="GoToRemoveBlogs">Remove Blogs</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#home" @onclick="GoToHome">Back to Home</a>
            </li>
        </ul>
    </div>
    <div class="content">
        <h3>Submit Blog</h3>
        <EditForm Model="blogModel" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="submittedBy">Submitted By</label>
                <InputText id="submittedBy" class="form-control" @bind-Value="blogModel.SubmittedBy" readonly />
            </div>
            <div class="form-group">
                <label for="title">Title</label>
                <InputText id="title" class="form-control" @bind-Value="blogModel.Title" />
            </div>
            <div class="form-group">
                <label for="content">Content</label>
                <InputTextArea id="content" class="form-control" @bind-Value="blogModel.Content" />
            </div>
            <button type="submit" class="btn btn-primary">Publish</button>
        </EditForm>
        <div class="alert alert-success mt-3" role="alert" style="display: @(showSuccessMessage ? "block" : "none")">
            Blog published successfully.
        </div>
    </div>
</div>
}
<style>
    .admin-dashboard {
        display: flex;
        height: 100vh;
    }

    .sidebar {
        width: 250px;
        background-color: #343a40;
        color: white;
        padding: 20px;
        box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    }

        .sidebar h2 {
            margin-bottom: 20px;
        }

    .nav-link {
        color: white;
        padding: 10px 15px;
        text-decoration: none;
    }

        .nav-link:hover {
            background-color: #495057;
            color: white;
        }

    .content {
        flex: 1;
        padding: 20px;
        background-color: #f8f9fa;
    }
</style>

@code {
    private BlogModel blogModel = new BlogModel();
    private int userId;
    private bool showSuccessMessage = false;

    [Parameter]
    public string username { get; set; }

    protected override void OnInitialized()
    {
        try
        {
            var user = UserService.GetUserByUsername(username);
            if (user != null)
            {
                userId = user.UserId;
                blogModel.SubmittedBy = username;
                blogModel.UserId = userId;
            }
            else
            {
                // Handle the case where the user is not found
                // For example, navigate to an error page
                NavigationManager.NavigateTo("/error");
            }
        }
        catch (Exception ex)
        {
            // Handle the exception (e.g., log it or display an error message)
            Console.WriteLine($"An error occurred: {ex.Message}");
            // Optionally, navigate to an error 
        }
    }

    private void HandleValidSubmit()
    {
        bool success = BlogService.SubmitBlog(blogModel);
        if (success)
        {
            showSuccessMessage = true;
            NavigationManager.NavigateTo($"/dashboard/{username}"); // Optionally, redirect after submission
        }
        else
        {
            // Handle submission failure (e.g., show a message to the user)
        }
    }

    private void GoToHome()
    {
        NavigationManager.NavigateTo($"/Home/{username}");
    }

    private void GoToRemoveBlogs()
    {
        NavigationManager.NavigateTo($"/removeblogs/{username}");
    }

    private void GoToPost()
    {
        NavigationManager.NavigateTo($"/dashboard/{username}");
    }
    private void HandleLogin()
    {
        NavigationManager.NavigateTo("/");
    }

}
